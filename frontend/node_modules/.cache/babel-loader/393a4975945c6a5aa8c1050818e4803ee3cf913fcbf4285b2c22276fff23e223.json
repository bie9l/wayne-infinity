{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: 'http://localhost:8000/api',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Interceptor para adicionar o token de autenticação\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Knox ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Serviço de autenticação\nexport const authService = {\n  async login(credentials) {\n    const response = await api.post('/auth/login/', credentials);\n    if (response.data.token) {\n      localStorage.setItem('token', response.data.token);\n    }\n    return response.data;\n  },\n  async register(userData) {\n    const response = await api.post('/auth/register/', userData);\n    if (response.data.token) {\n      localStorage.setItem('token', response.data.token);\n    }\n    return response.data;\n  },\n  async logout() {\n    const token = localStorage.getItem('token');\n    if (token) {\n      await api.post('/auth/logout/', null, {\n        headers: {\n          Authorization: `Knox ${token}`\n        }\n      });\n    }\n    localStorage.removeItem('token');\n  },\n  async getCurrentUser() {\n    const response = await api.get('/auth/user/');\n    return response.data;\n  },\n  isAuthenticated() {\n    return !!localStorage.getItem('token');\n  }\n};\n\n// Serviços de recursos\nexport const resourcesService = {\n  // Equipamentos\n  getEquipment: () => api.get('/resources/equipment/'),\n  getEquipmentById: id => api.get(`/resources/equipment/${id}/`),\n  createEquipment: data => api.post('/resources/equipment/', data),\n  updateEquipment: (id, data) => api.put(`/resources/equipment/${id}/`, data),\n  deleteEquipment: id => api.delete(`/resources/equipment/${id}/`),\n  // Veículos\n  getVehicles: () => api.get('/resources/vehicles/'),\n  getVehicleById: id => api.get(`/resources/vehicles/${id}/`),\n  createVehicle: data => api.post('/resources/vehicles/', data),\n  updateVehicle: (id, data) => api.put(`/resources/vehicles/${id}/`, data),\n  deleteVehicle: id => api.delete(`/resources/vehicles/${id}/`),\n  // Dispositivos de Segurança\n  getDevices: () => api.get('/resources/devices/'),\n  getDeviceById: id => api.get(`/resources/devices/${id}/`),\n  createDevice: data => api.post('/resources/devices/', data),\n  updateDevice: (id, data) => api.put(`/resources/devices/${id}/`, data),\n  deleteDevice: id => api.delete(`/resources/devices/${id}/`),\n  // Dashboard\n  getDashboard: () => api.get('/resources/dashboard/')\n};\n\n// Serviços de segurança\nexport const securityService = {\n  // Logs de Acesso\n  getLogs: () => api.get('/security/logs/'),\n  createLog: data => api.post('/security/logs/create/', data),\n  // Alertas\n  getAlerts: () => api.get('/security/alerts/'),\n  getAlertById: id => api.get(`/security/alerts/${id}/`),\n  createAlert: data => api.post('/security/alerts/', data),\n  updateAlert: (id, data) => api.put(`/security/alerts/${id}/`, data),\n  resolveAlert: (id, data) => api.post(`/security/alerts/${id}/resolve/`, data),\n  // Áreas Restritas\n  getAreas: () => api.get('/security/areas/'),\n  getAreaById: id => api.get(`/security/areas/${id}/`),\n  createArea: data => api.post('/security/areas/', data),\n  updateArea: (id, data) => api.put(`/security/areas/${id}/`, data),\n  deleteArea: id => api.delete(`/security/areas/${id}/`),\n  checkAccess: areaId => api.post('/security/areas/check-access/', {\n    area_id: areaId\n  }),\n  // Dashboard\n  getDashboard: () => api.get('/security/dashboard/')\n};\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","authService","login","credentials","response","post","data","setItem","register","userData","logout","removeItem","getCurrentUser","get","isAuthenticated","resourcesService","getEquipment","getEquipmentById","id","createEquipment","updateEquipment","put","deleteEquipment","delete","getVehicles","getVehicleById","createVehicle","updateVehicle","deleteVehicle","getDevices","getDeviceById","createDevice","updateDevice","deleteDevice","getDashboard","securityService","getLogs","createLog","getAlerts","getAlertById","createAlert","updateAlert","resolveAlert","getAreas","getAreaById","createArea","updateArea","deleteArea","checkAccess","areaId","area_id"],"sources":["/Users/educat/infinity/wayne-infinity-1/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'http://localhost:8000/api',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Interceptor para adicionar o token de autenticação\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Knox ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Serviço de autenticação\nexport const authService = {\n  async login(credentials) {\n    const response = await api.post('/auth/login/', credentials);\n    if (response.data.token) {\n      localStorage.setItem('token', response.data.token);\n    }\n    return response.data;\n  },\n\n  async register(userData) {\n    const response = await api.post('/auth/register/', userData);\n    if (response.data.token) {\n      localStorage.setItem('token', response.data.token);\n    }\n    return response.data;\n  },\n\n  async logout() {\n    const token = localStorage.getItem('token');\n    if (token) {\n      await api.post('/auth/logout/', null, {\n        headers: { Authorization: `Knox ${token}` }\n      });\n    }\n    localStorage.removeItem('token');\n  },\n\n  async getCurrentUser() {\n    const response = await api.get('/auth/user/');\n    return response.data;\n  },\n\n  isAuthenticated() {\n    return !!localStorage.getItem('token');\n  }\n};\n\n// Serviços de recursos\nexport const resourcesService = {\n  // Equipamentos\n  getEquipment: () => api.get('/resources/equipment/'),\n  getEquipmentById: (id) => api.get(`/resources/equipment/${id}/`),\n  createEquipment: (data) => api.post('/resources/equipment/', data),\n  updateEquipment: (id, data) => api.put(`/resources/equipment/${id}/`, data),\n  deleteEquipment: (id) => api.delete(`/resources/equipment/${id}/`),\n\n  // Veículos\n  getVehicles: () => api.get('/resources/vehicles/'),\n  getVehicleById: (id) => api.get(`/resources/vehicles/${id}/`),\n  createVehicle: (data) => api.post('/resources/vehicles/', data),\n  updateVehicle: (id, data) => api.put(`/resources/vehicles/${id}/`, data),\n  deleteVehicle: (id) => api.delete(`/resources/vehicles/${id}/`),\n\n  // Dispositivos de Segurança\n  getDevices: () => api.get('/resources/devices/'),\n  getDeviceById: (id) => api.get(`/resources/devices/${id}/`),\n  createDevice: (data) => api.post('/resources/devices/', data),\n  updateDevice: (id, data) => api.put(`/resources/devices/${id}/`, data),\n  deleteDevice: (id) => api.delete(`/resources/devices/${id}/`),\n\n  // Dashboard\n  getDashboard: () => api.get('/resources/dashboard/'),\n};\n\n// Serviços de segurança\nexport const securityService = {\n  // Logs de Acesso\n  getLogs: () => api.get('/security/logs/'),\n  createLog: (data) => api.post('/security/logs/create/', data),\n\n  // Alertas\n  getAlerts: () => api.get('/security/alerts/'),\n  getAlertById: (id) => api.get(`/security/alerts/${id}/`),\n  createAlert: (data) => api.post('/security/alerts/', data),\n  updateAlert: (id, data) => api.put(`/security/alerts/${id}/`, data),\n  resolveAlert: (id, data) => api.post(`/security/alerts/${id}/resolve/`, data),\n\n  // Áreas Restritas\n  getAreas: () => api.get('/security/areas/'),\n  getAreaById: (id) => api.get(`/security/areas/${id}/`),\n  createArea: (data) => api.post('/security/areas/', data),\n  updateArea: (id, data) => api.put(`/security/areas/${id}/`, data),\n  deleteArea: (id) => api.delete(`/security/areas/${id}/`),\n  checkAccess: (areaId) => api.post('/security/areas/check-access/', { area_id: areaId }),\n\n  // Dashboard\n  getDashboard: () => api.get('/security/dashboard/'),\n};\n\nexport default api; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}