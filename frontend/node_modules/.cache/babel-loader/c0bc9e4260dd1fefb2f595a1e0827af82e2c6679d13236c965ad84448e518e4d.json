{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  token: localStorage.getItem('token'),\n  user: null,\n  isAuthenticated: false,\n  isLoading: false,\n  error: null\n};\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    loginStart: state => {\n      state.isLoading = true;\n      state.error = null;\n    },\n    loginSuccess: (state, action) => {\n      state.isLoading = false;\n      state.isAuthenticated = true;\n      state.token = action.payload.token;\n      state.user = action.payload.user;\n      localStorage.setItem('token', action.payload.token);\n    },\n    loginFailure: (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n    logout: state => {\n      state.token = null;\n      state.user = null;\n      state.isAuthenticated = false;\n      localStorage.removeItem('token');\n    },\n    updateUser: (state, action) => {\n      state.user = action.payload;\n    }\n  }\n});\nexport const {\n  loginStart,\n  loginSuccess,\n  loginFailure,\n  logout,\n  updateUser\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","token","localStorage","getItem","user","isAuthenticated","isLoading","error","authSlice","name","reducers","loginStart","state","loginSuccess","action","payload","setItem","loginFailure","logout","removeItem","updateUser","actions","reducer"],"sources":["/Users/educat/infinity/wayne-infinity/frontend/src/store/slices/authSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  token: localStorage.getItem('token'),\n  user: null,\n  isAuthenticated: false,\n  isLoading: false,\n  error: null,\n};\n\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    loginStart: (state) => {\n      state.isLoading = true;\n      state.error = null;\n    },\n    loginSuccess: (state, action) => {\n      state.isLoading = false;\n      state.isAuthenticated = true;\n      state.token = action.payload.token;\n      state.user = action.payload.user;\n      localStorage.setItem('token', action.payload.token);\n    },\n    loginFailure: (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n    logout: (state) => {\n      state.token = null;\n      state.user = null;\n      state.isAuthenticated = false;\n      localStorage.removeItem('token');\n    },\n    updateUser: (state, action) => {\n      state.user = action.payload;\n    },\n  },\n});\n\nexport const {\n  loginStart,\n  loginSuccess,\n  loginFailure,\n  logout,\n  updateUser,\n} = authSlice.actions;\n\nexport default authSlice.reducer; "],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAEC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EACpCC,IAAI,EAAE,IAAI;EACVC,eAAe,EAAE,KAAK;EACtBC,SAAS,EAAE,KAAK;EAChBC,KAAK,EAAE;AACT,CAAC;AAED,OAAO,MAAMC,SAAS,GAAGT,WAAW,CAAC;EACnCU,IAAI,EAAE,MAAM;EACZT,YAAY;EACZU,QAAQ,EAAE;IACRC,UAAU,EAAGC,KAAK,IAAK;MACrBA,KAAK,CAACN,SAAS,GAAG,IAAI;MACtBM,KAAK,CAACL,KAAK,GAAG,IAAI;IACpB,CAAC;IACDM,YAAY,EAAEA,CAACD,KAAK,EAAEE,MAAM,KAAK;MAC/BF,KAAK,CAACN,SAAS,GAAG,KAAK;MACvBM,KAAK,CAACP,eAAe,GAAG,IAAI;MAC5BO,KAAK,CAACX,KAAK,GAAGa,MAAM,CAACC,OAAO,CAACd,KAAK;MAClCW,KAAK,CAACR,IAAI,GAAGU,MAAM,CAACC,OAAO,CAACX,IAAI;MAChCF,YAAY,CAACc,OAAO,CAAC,OAAO,EAAEF,MAAM,CAACC,OAAO,CAACd,KAAK,CAAC;IACrD,CAAC;IACDgB,YAAY,EAAEA,CAACL,KAAK,EAAEE,MAAM,KAAK;MAC/BF,KAAK,CAACN,SAAS,GAAG,KAAK;MACvBM,KAAK,CAACL,KAAK,GAAGO,MAAM,CAACC,OAAO;IAC9B,CAAC;IACDG,MAAM,EAAGN,KAAK,IAAK;MACjBA,KAAK,CAACX,KAAK,GAAG,IAAI;MAClBW,KAAK,CAACR,IAAI,GAAG,IAAI;MACjBQ,KAAK,CAACP,eAAe,GAAG,KAAK;MAC7BH,YAAY,CAACiB,UAAU,CAAC,OAAO,CAAC;IAClC,CAAC;IACDC,UAAU,EAAEA,CAACR,KAAK,EAAEE,MAAM,KAAK;MAC7BF,KAAK,CAACR,IAAI,GAAGU,MAAM,CAACC,OAAO;IAC7B;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EACXJ,UAAU;EACVE,YAAY;EACZI,YAAY;EACZC,MAAM;EACNE;AACF,CAAC,GAAGZ,SAAS,CAACa,OAAO;AAErB,eAAeb,SAAS,CAACc,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}