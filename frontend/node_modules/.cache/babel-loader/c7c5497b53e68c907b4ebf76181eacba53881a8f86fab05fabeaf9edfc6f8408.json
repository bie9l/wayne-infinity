{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  accessLogs: [],\n  alerts: [],\n  restrictedAreas: [],\n  isLoading: false,\n  error: null,\n  dashboardData: null\n};\nexport const securitySlice = createSlice({\n  name: 'security',\n  initialState,\n  reducers: {\n    fetchStart: state => {\n      state.isLoading = true;\n      state.error = null;\n    },\n    fetchSuccess: (state, action) => {\n      state.isLoading = false;\n      const {\n        type,\n        data\n      } = action.payload;\n      switch (type) {\n        case 'accessLogs':\n          state.accessLogs = data;\n          break;\n        case 'alerts':\n          state.alerts = data;\n          break;\n        case 'restrictedAreas':\n          state.restrictedAreas = data;\n          break;\n        case 'dashboard':\n          state.dashboardData = data;\n          break;\n        default:\n          break;\n      }\n    },\n    fetchFailure: (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n    addAlert: (state, action) => {\n      state.alerts.unshift(action.payload);\n    },\n    updateAlert: (state, action) => {\n      state.alerts = state.alerts.map(alert => alert.id === action.payload.id ? action.payload : alert);\n    },\n    addAccessLog: (state, action) => {\n      state.accessLogs.unshift(action.payload);\n    },\n    addRestrictedArea: (state, action) => {\n      state.restrictedAreas.push(action.payload);\n    },\n    updateRestrictedArea: (state, action) => {\n      state.restrictedAreas = state.restrictedAreas.map(area => area.id === action.payload.id ? action.payload : area);\n    },\n    removeRestrictedArea: (state, action) => {\n      state.restrictedAreas = state.restrictedAreas.filter(area => area.id !== action.payload);\n    }\n  }\n});\nexport const {\n  fetchStart,\n  fetchSuccess,\n  fetchFailure,\n  addAlert,\n  updateAlert,\n  addAccessLog,\n  addRestrictedArea,\n  updateRestrictedArea,\n  removeRestrictedArea\n} = securitySlice.actions;\nexport default securitySlice.reducer;","map":{"version":3,"names":["createSlice","initialState","accessLogs","alerts","restrictedAreas","isLoading","error","dashboardData","securitySlice","name","reducers","fetchStart","state","fetchSuccess","action","type","data","payload","fetchFailure","addAlert","unshift","updateAlert","map","alert","id","addAccessLog","addRestrictedArea","push","updateRestrictedArea","area","removeRestrictedArea","filter","actions","reducer"],"sources":["/Users/educat/infinity/wayne-infinity/frontend/src/store/slices/securitySlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  accessLogs: [],\n  alerts: [],\n  restrictedAreas: [],\n  isLoading: false,\n  error: null,\n  dashboardData: null,\n};\n\nexport const securitySlice = createSlice({\n  name: 'security',\n  initialState,\n  reducers: {\n    fetchStart: (state) => {\n      state.isLoading = true;\n      state.error = null;\n    },\n    fetchSuccess: (state, action) => {\n      state.isLoading = false;\n      const { type, data } = action.payload;\n      switch (type) {\n        case 'accessLogs':\n          state.accessLogs = data;\n          break;\n        case 'alerts':\n          state.alerts = data;\n          break;\n        case 'restrictedAreas':\n          state.restrictedAreas = data;\n          break;\n        case 'dashboard':\n          state.dashboardData = data;\n          break;\n        default:\n          break;\n      }\n    },\n    fetchFailure: (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n    addAlert: (state, action) => {\n      state.alerts.unshift(action.payload);\n    },\n    updateAlert: (state, action) => {\n      state.alerts = state.alerts.map((alert) =>\n        alert.id === action.payload.id ? action.payload : alert\n      );\n    },\n    addAccessLog: (state, action) => {\n      state.accessLogs.unshift(action.payload);\n    },\n    addRestrictedArea: (state, action) => {\n      state.restrictedAreas.push(action.payload);\n    },\n    updateRestrictedArea: (state, action) => {\n      state.restrictedAreas = state.restrictedAreas.map((area) =>\n        area.id === action.payload.id ? action.payload : area\n      );\n    },\n    removeRestrictedArea: (state, action) => {\n      state.restrictedAreas = state.restrictedAreas.filter(\n        (area) => area.id !== action.payload\n      );\n    },\n  },\n});\n\nexport const {\n  fetchStart,\n  fetchSuccess,\n  fetchFailure,\n  addAlert,\n  updateAlert,\n  addAccessLog,\n  addRestrictedArea,\n  updateRestrictedArea,\n  removeRestrictedArea,\n} = securitySlice.actions;\n\nexport default securitySlice.reducer; "],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACnBC,UAAU,EAAE,EAAE;EACdC,MAAM,EAAE,EAAE;EACVC,eAAe,EAAE,EAAE;EACnBC,SAAS,EAAE,KAAK;EAChBC,KAAK,EAAE,IAAI;EACXC,aAAa,EAAE;AACjB,CAAC;AAED,OAAO,MAAMC,aAAa,GAAGR,WAAW,CAAC;EACvCS,IAAI,EAAE,UAAU;EAChBR,YAAY;EACZS,QAAQ,EAAE;IACRC,UAAU,EAAGC,KAAK,IAAK;MACrBA,KAAK,CAACP,SAAS,GAAG,IAAI;MACtBO,KAAK,CAACN,KAAK,GAAG,IAAI;IACpB,CAAC;IACDO,YAAY,EAAEA,CAACD,KAAK,EAAEE,MAAM,KAAK;MAC/BF,KAAK,CAACP,SAAS,GAAG,KAAK;MACvB,MAAM;QAAEU,IAAI;QAAEC;MAAK,CAAC,GAAGF,MAAM,CAACG,OAAO;MACrC,QAAQF,IAAI;QACV,KAAK,YAAY;UACfH,KAAK,CAACV,UAAU,GAAGc,IAAI;UACvB;QACF,KAAK,QAAQ;UACXJ,KAAK,CAACT,MAAM,GAAGa,IAAI;UACnB;QACF,KAAK,iBAAiB;UACpBJ,KAAK,CAACR,eAAe,GAAGY,IAAI;UAC5B;QACF,KAAK,WAAW;UACdJ,KAAK,CAACL,aAAa,GAAGS,IAAI;UAC1B;QACF;UACE;MACJ;IACF,CAAC;IACDE,YAAY,EAAEA,CAACN,KAAK,EAAEE,MAAM,KAAK;MAC/BF,KAAK,CAACP,SAAS,GAAG,KAAK;MACvBO,KAAK,CAACN,KAAK,GAAGQ,MAAM,CAACG,OAAO;IAC9B,CAAC;IACDE,QAAQ,EAAEA,CAACP,KAAK,EAAEE,MAAM,KAAK;MAC3BF,KAAK,CAACT,MAAM,CAACiB,OAAO,CAACN,MAAM,CAACG,OAAO,CAAC;IACtC,CAAC;IACDI,WAAW,EAAEA,CAACT,KAAK,EAAEE,MAAM,KAAK;MAC9BF,KAAK,CAACT,MAAM,GAAGS,KAAK,CAACT,MAAM,CAACmB,GAAG,CAAEC,KAAK,IACpCA,KAAK,CAACC,EAAE,KAAKV,MAAM,CAACG,OAAO,CAACO,EAAE,GAAGV,MAAM,CAACG,OAAO,GAAGM,KACpD,CAAC;IACH,CAAC;IACDE,YAAY,EAAEA,CAACb,KAAK,EAAEE,MAAM,KAAK;MAC/BF,KAAK,CAACV,UAAU,CAACkB,OAAO,CAACN,MAAM,CAACG,OAAO,CAAC;IAC1C,CAAC;IACDS,iBAAiB,EAAEA,CAACd,KAAK,EAAEE,MAAM,KAAK;MACpCF,KAAK,CAACR,eAAe,CAACuB,IAAI,CAACb,MAAM,CAACG,OAAO,CAAC;IAC5C,CAAC;IACDW,oBAAoB,EAAEA,CAAChB,KAAK,EAAEE,MAAM,KAAK;MACvCF,KAAK,CAACR,eAAe,GAAGQ,KAAK,CAACR,eAAe,CAACkB,GAAG,CAAEO,IAAI,IACrDA,IAAI,CAACL,EAAE,KAAKV,MAAM,CAACG,OAAO,CAACO,EAAE,GAAGV,MAAM,CAACG,OAAO,GAAGY,IACnD,CAAC;IACH,CAAC;IACDC,oBAAoB,EAAEA,CAAClB,KAAK,EAAEE,MAAM,KAAK;MACvCF,KAAK,CAACR,eAAe,GAAGQ,KAAK,CAACR,eAAe,CAAC2B,MAAM,CACjDF,IAAI,IAAKA,IAAI,CAACL,EAAE,KAAKV,MAAM,CAACG,OAC/B,CAAC;IACH;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EACXN,UAAU;EACVE,YAAY;EACZK,YAAY;EACZC,QAAQ;EACRE,WAAW;EACXI,YAAY;EACZC,iBAAiB;EACjBE,oBAAoB;EACpBE;AACF,CAAC,GAAGtB,aAAa,CAACwB,OAAO;AAEzB,eAAexB,aAAa,CAACyB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}