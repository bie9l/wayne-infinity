{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  equipment: [],\n  vehicles: [],\n  securityDevices: [],\n  isLoading: false,\n  error: null,\n  dashboardData: null\n};\nexport const resourcesSlice = createSlice({\n  name: 'resources',\n  initialState,\n  reducers: {\n    fetchStart: state => {\n      state.isLoading = true;\n      state.error = null;\n    },\n    fetchSuccess: (state, action) => {\n      state.isLoading = false;\n      const {\n        type,\n        data\n      } = action.payload;\n      switch (type) {\n        case 'equipment':\n          state.equipment = data;\n          break;\n        case 'vehicles':\n          state.vehicles = data;\n          break;\n        case 'securityDevices':\n          state.securityDevices = data;\n          break;\n        case 'dashboard':\n          state.dashboardData = data;\n          break;\n        default:\n          break;\n      }\n    },\n    fetchFailure: (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n    addItem: (state, action) => {\n      const {\n        type,\n        item\n      } = action.payload;\n      switch (type) {\n        case 'equipment':\n          state.equipment.push(item);\n          break;\n        case 'vehicles':\n          state.vehicles.push(item);\n          break;\n        case 'securityDevices':\n          state.securityDevices.push(item);\n          break;\n        default:\n          break;\n      }\n    },\n    updateItem: (state, action) => {\n      const {\n        type,\n        item\n      } = action.payload;\n      switch (type) {\n        case 'equipment':\n          state.equipment = state.equipment.map(eq => eq.id === item.id ? item : eq);\n          break;\n        case 'vehicles':\n          state.vehicles = state.vehicles.map(v => v.id === item.id ? item : v);\n          break;\n        case 'securityDevices':\n          state.securityDevices = state.securityDevices.map(d => d.id === item.id ? item : d);\n          break;\n        default:\n          break;\n      }\n    },\n    removeItem: (state, action) => {\n      const {\n        type,\n        id\n      } = action.payload;\n      switch (type) {\n        case 'equipment':\n          state.equipment = state.equipment.filter(eq => eq.id !== id);\n          break;\n        case 'vehicles':\n          state.vehicles = state.vehicles.filter(v => v.id !== id);\n          break;\n        case 'securityDevices':\n          state.securityDevices = state.securityDevices.filter(d => d.id !== id);\n          break;\n        default:\n          break;\n      }\n    }\n  }\n});\nexport const {\n  fetchStart,\n  fetchSuccess,\n  fetchFailure,\n  addItem,\n  updateItem,\n  removeItem\n} = resourcesSlice.actions;\nexport default resourcesSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","equipment","vehicles","securityDevices","isLoading","error","dashboardData","resourcesSlice","name","reducers","fetchStart","state","fetchSuccess","action","type","data","payload","fetchFailure","addItem","item","push","updateItem","map","eq","id","v","d","removeItem","filter","actions","reducer"],"sources":["/Users/educat/infinity/wayne-infinity/frontend/src/store/slices/resourcesSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  equipment: [],\n  vehicles: [],\n  securityDevices: [],\n  isLoading: false,\n  error: null,\n  dashboardData: null,\n};\n\nexport const resourcesSlice = createSlice({\n  name: 'resources',\n  initialState,\n  reducers: {\n    fetchStart: (state) => {\n      state.isLoading = true;\n      state.error = null;\n    },\n    fetchSuccess: (state, action) => {\n      state.isLoading = false;\n      const { type, data } = action.payload;\n      switch (type) {\n        case 'equipment':\n          state.equipment = data;\n          break;\n        case 'vehicles':\n          state.vehicles = data;\n          break;\n        case 'securityDevices':\n          state.securityDevices = data;\n          break;\n        case 'dashboard':\n          state.dashboardData = data;\n          break;\n        default:\n          break;\n      }\n    },\n    fetchFailure: (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n    addItem: (state, action) => {\n      const { type, item } = action.payload;\n      switch (type) {\n        case 'equipment':\n          state.equipment.push(item);\n          break;\n        case 'vehicles':\n          state.vehicles.push(item);\n          break;\n        case 'securityDevices':\n          state.securityDevices.push(item);\n          break;\n        default:\n          break;\n      }\n    },\n    updateItem: (state, action) => {\n      const { type, item } = action.payload;\n      switch (type) {\n        case 'equipment':\n          state.equipment = state.equipment.map((eq) =>\n            eq.id === item.id ? item : eq\n          );\n          break;\n        case 'vehicles':\n          state.vehicles = state.vehicles.map((v) =>\n            v.id === item.id ? item : v\n          );\n          break;\n        case 'securityDevices':\n          state.securityDevices = state.securityDevices.map((d) =>\n            d.id === item.id ? item : d\n          );\n          break;\n        default:\n          break;\n      }\n    },\n    removeItem: (state, action) => {\n      const { type, id } = action.payload;\n      switch (type) {\n        case 'equipment':\n          state.equipment = state.equipment.filter((eq) => eq.id !== id);\n          break;\n        case 'vehicles':\n          state.vehicles = state.vehicles.filter((v) => v.id !== id);\n          break;\n        case 'securityDevices':\n          state.securityDevices = state.securityDevices.filter((d) => d.id !== id);\n          break;\n        default:\n          break;\n      }\n    },\n  },\n});\n\nexport const {\n  fetchStart,\n  fetchSuccess,\n  fetchFailure,\n  addItem,\n  updateItem,\n  removeItem,\n} = resourcesSlice.actions;\n\nexport default resourcesSlice.reducer; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}